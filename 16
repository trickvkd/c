from keras.datasets import mnist
data = mnist.load_data()
from keras.models import Sequential
from keras.layers import Dense
from keras import utils
import matplotlib.pyplot as plt
(X_train, y_train), (X_test, y_test) = data
print("X_train shape",X_train.shape)
print("y_train shape",y_train.shape)
print("X_test shape",X_test.shape)
print("y_test shape",y_test.shape)
plt.imshow(X_train[5],cmap=plt.cm.binary)
print(y_train[5])
X_train=X_train.reshape(60000,784)
X_test=X_test.reshape(10000,784)
X_train=X_train.astype('float32')
X_test=X_test.astype('float32')
X_train/=255
X_test/=255
X_train.shape
n_classes= 10
Y_train=utils.to_categorical(y_train,n_classes)
Y_test=utils.to_categorical(y_test,n_classes)
model=Sequential()
model.add(Dense(100,input_shape=(784,),activation='relu'))
model.add(Dense(10,activation='softmax'))
model.summary()
model.compile(loss='categorical_crossentropy',metrics=['accuracy'],optimizer='adam')
model.fit(X_train, Y_train,batch_size=100,epochs=10)
test_loss,test_acc=model.evaluate(X_test,Y_test)
print("Test accuracy",round(test_acc,3))
print("test loss",round(test_loss,3))
